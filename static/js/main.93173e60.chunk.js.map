{"version":3,"sources":["img/mountain.jpg","components/Navigation.jsx","contexts/TwittersContext/TwittersContext.jsx","contexts/AppContext/AppContext.jsx","views/TwittersList/TwitterItem.jsx","components/EmptyDisplay.jsx","views/TwittersList/TwittersItems.jsx","contexts/ArticlesContext/ArticlesContext.jsx","views/ArticlesList/ArticleItem.jsx","views/ArticlesList/ArticlesItems.jsx","contexts/NotesContext/NotesContext.jsx","views/NotesList/NoteItem.jsx","views/NotesList/NotesItems.jsx","views/ViewContainer.jsx","components/NewFormTwitter.jsx","components/NewFormArticle.jsx","components/NewFormNotes.jsx","views/NewItem.jsx","views/Edit/EditTwitter.jsx","views/Edit/EditArticle.jsx","views/Edit/EditNote.jsx","App.jsx","index.jsx"],"names":["module","exports","Navigation","setFormOn","id","className","exact","to","onClick","TwittersContext","createContext","TwittersContextProvider","props","useState","picture","name","description","twitterPage","twitters","setTwitters","Provider","value","removeTwitt","filter","twitt","addTwitt","uuid","editTwitt","editedElement","tempArr","map","el","children","AppContext","TwitterItem","useContext","setFormTwitterOn","src","alt","href","target","rel","style","color","EmptyDisplay","TwittersItems","length","twitter","key","ArticlesContext","ArticlesContextProvider","articles","setArticles","removeArticle","article","addArticle","editArticle","ArticleItem","setFormArticleOn","ArticlesItems","NotesContext","NotesContextProvider","notes","setNotes","removeNote","note","addNote","editNote","NoteItem","setFormNoteOn","NotesItems","ViewContainer","path","render","NewFormTwitter","setFormOff","setName","setTwitterPage","setPicture","setDescription","pictureValidation","validationExtencions","index","lastIndexOf","tempImg","extensione","substr","console","log","find","undefined","onSubmit","e","preventDefault","image","type","placeholder","required","onChange","NewFormArticle","NewFormNotes","NewItem","headerInfo","state","header","handleChange","setState","displayForm","this","htmlFor","checked","Component","EditTwitter","setFormTwitterOff","useEffect","EditArticle","setFormArticleOff","EditNote","setFormNoteOff","newNote","App","setId","setTwitter","setArticle","setNote","isFormOn","setIsFormOn","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.93173e60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mountain.b993d5ce.jpg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = ({ setFormOn }) => {\r\n  return (\r\n    <nav id=\"navigation\">\r\n      <section className=\"logo-nav\">\r\n        <h2 className=\"logo-nav__header\">FavNotes</h2>\r\n        <ul className=\"logo-nav__items\">\r\n          <li className=\"logo-nav__item\"><NavLink exact to=\"/\">twitters</NavLink></li>\r\n          <li className=\"logo-nav__item\"><NavLink to=\"/articles\">articles</NavLink></li>\r\n          <li className=\"logo-nav__item\"><NavLink to='/notes'>notes</NavLink></li>\r\n        </ul>\r\n      </section>\r\n      <button\r\n        className=\"btn\"\r\n        onClick={setFormOn}\r\n      >new item</button>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React, { createContext, useState } from 'react';\r\nimport uuid from 'uuid/v1';\r\n\r\nexport const TwittersContext = createContext();\r\n\r\nconst TwittersContextProvider = (props) => {\r\n  const [twitters, setTwitters] = useState([\r\n    { id: 1, picture: 'https://d2eip9sf3oo6c2.cloudfront.net/instructors/avatars/000/000/032/square_480/oapgW_Fp_400x400.jpg', name: 'Dan Abramov', description: 'Working on react.js.', twitterPage: 'https://twitter.com/dan_abramov' },\r\n    { id: 2, picture: 'https://pbs.twimg.com/profile_images/1166030195834273794/pBb6hjVb_400x400.jpg', name: 'Ryan Florence', description: 'Making React accessible for users and developers at https://reach.tech . Online learning, workshops, OSS, and consulting.', twitterPage: 'https://twitter.com/ryanflorence' },\r\n\r\n  ])\r\n\r\n  const removeTwitt = (id) => {\r\n    setTwitters(twitters.filter(twitt => twitt.id !== id));\r\n  }\r\n\r\n  const addTwitt = (picture, name, description, twitterPage) => {\r\n    setTwitters([...twitters, { id: uuid(), picture, name, description, twitterPage }])\r\n  }\r\n\r\n  const editTwitt = (id, name, picture, description, twitterPage) => {\r\n    const editedElement = {\r\n      id, name, picture, description, twitterPage\r\n    }\r\n\r\n    const tempArr = twitters.map(el => {\r\n      if (el.id === id) {\r\n        return editedElement;\r\n      }\r\n      return el;\r\n    })\r\n\r\n    setTwitters(tempArr);\r\n  }\r\n\r\n  return (\r\n    <TwittersContext.Provider value={{ twitters, removeTwitt, addTwitt, editTwitt }}>\r\n      {props.children}\r\n    </TwittersContext.Provider>\r\n  );\r\n}\r\n\r\nexport default TwittersContextProvider;\r\n\r\n// { id: 3, picture: 'https://miro.medium.com/max/2400/1*2ysGC1u4jayrk3Uu3VG6Zg.jpeg', name: 'Michael Jackson', description: 'Maker. Co-author of React Router. Working on @ReactTraining. Created @unpkg. Head over heels for @cari.', twitterPage: 'https://twitter.com/mjackson' },\r\n//     { id: 4, picture: 'https://pbs.twimg.com/profile_images/1097518581250613249/4poDd0IC_400x400.png', name: 'Kent C. Dodds', description: 'Making software development more accessible · Husband, Father, Latter-day Saint, Teacher, OSS, GDE, @TC39 · @PayPalEng @eggheadio @FrontendMasters · #JS', twitterPage: 'https://twitter.com/kentcdodds' }","import { createContext } from 'react';\r\n\r\nexport const AppContext = createContext();","import React, { useContext } from 'react';\r\nimport { TwittersContext } from '../../contexts/TwittersContext/TwittersContext';\r\nimport { AppContext } from '../../contexts/AppContext/AppContext';\r\n\r\nconst TwitterItem = ({ id, picture, name, description, twitterPage }) => {\r\n  const { removeTwitt } = useContext(TwittersContext);\r\n  const { setFormTwitterOn } = useContext(AppContext);\r\n\r\n  return (\r\n    <div id=\"twitterItem\">\r\n      <div className=\"image\">\r\n        <img src={picture} alt={`${name}`} />\r\n      </div>\r\n\r\n      <div className=\"description\">\r\n        <h2 className=\"header\">{name}</h2>\r\n        <p className=\"paragraph\">{description}</p>\r\n\r\n        <button className=\"btn btn-transparent\">\r\n          <a href={twitterPage} target=\"_blank\" rel=\"noopener noreferrer\">visit twitter page</a>\r\n        </button>\r\n\r\n        <button onClick={() => setFormTwitterOn(id)} className=\"btn btn-transparent\">edit</button>\r\n        <button onClick={() => removeTwitt(id)} style={{ color: 'white' }} className=\"btn\">remove</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TwitterItem;","import React from 'react';\r\n\r\nconst EmptyDisplay = () => {\r\n  return (\r\n    <div className=\"empty\">\r\n      <p>There's nothing here yet, please add some items!</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyDisplay;","import React, { useContext } from 'react';\r\nimport TwitterItem from './TwitterItem';\r\nimport EmptyDisplay from '../../components/EmptyDisplay';\r\nimport { TwittersContext } from '../../contexts/TwittersContext/TwittersContext';\r\n\r\nconst TwittersItems = () => {\r\n  const { twitters } = useContext(TwittersContext);\r\n\r\n  return twitters.length ? (\r\n    <div id=\"twittersItems\">\r\n      {\r\n        twitters.map(twitter =>\r\n          <TwitterItem key={twitter.id} {...twitter} />\r\n        )\r\n      }\r\n    </div>\r\n  ) : (\r\n      <EmptyDisplay />\r\n    );\r\n}\r\n\r\nexport default TwittersItems;","import React, { createContext, useState } from 'react';\r\nimport uuid from 'uuid/v1';\r\n\r\nexport const ArticlesContext = createContext();\r\n\r\nconst ArticlesContextProvider = (props) => {\r\n  const [articles, setArticles] = useState([\r\n    { id: 1, name: 'Dan Abramov', description: 'Working on react.js.', twitterPage: 'https://twitter.com/dan_abramov' },\r\n    { id: 2, name: 'Ryan Florence', description: 'Making React accessible for users and developers at https://reach.tech . Online learning, workshops, OSS, and consulting.', twitterPage: 'https://twitter.com/ryanflorence' },\r\n  ]);\r\n\r\n  const removeArticle = (id) => {\r\n    setArticles(articles.filter(article => article.id !== id));\r\n  }\r\n\r\n  const addArticle = (name, description, twitterPage) => {\r\n    setArticles([...articles, { id: uuid(), name, description, twitterPage }])\r\n  }\r\n\r\n  const editArticle = (id, name, description, twitterPage) => {\r\n    const editedElement = {\r\n      id, name, description, twitterPage\r\n    }\r\n\r\n    const tempArr = articles.map(el => {\r\n      if (el.id === id) {\r\n        return editedElement;\r\n      }\r\n      return el;\r\n    });\r\n\r\n    setArticles(tempArr);\r\n  }\r\n\r\n  return (\r\n    <ArticlesContext.Provider value={{ articles, removeArticle, addArticle, editArticle }}>\r\n      {props.children}\r\n    </ArticlesContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ArticlesContextProvider;","import React, { useContext } from 'react';\r\nimport { ArticlesContext } from '../../contexts/ArticlesContext/ArticlesContext';\r\nimport { AppContext } from '../../contexts/AppContext/AppContext';\r\n\r\nconst ArticleItem = ({ id, name, description, twitterPage }) => {\r\n  const { removeArticle } = useContext(ArticlesContext);\r\n  const { setFormArticleOn } = useContext(AppContext);\r\n\r\n  return (\r\n    <div id=\"articleItem\">\r\n      <div className=\"description\">\r\n        <h2 className=\"header\">{name}</h2>\r\n        <p className=\"paragraph\">{description}</p>\r\n\r\n        <button className=\"btn btn-transparent\">\r\n          <a href={twitterPage} target=\"_blank\" rel=\"noopener noreferrer\">visit twitter page</a>\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => setFormArticleOn(id)}\r\n          className=\"btn btn-transparent\"\r\n        >edit</button>\r\n\r\n        <button\r\n          onClick={() => removeArticle(id)}\r\n          className=\"btn btn-transparent\"\r\n        >remove</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArticleItem;","import React, { useContext } from 'react';\r\nimport { ArticlesContext } from '../../contexts/ArticlesContext/ArticlesContext';\r\nimport EmptyDisplay from '../../components/EmptyDisplay';\r\nimport ArticleItem from './ArticleItem';\r\n\r\nconst ArticlesItems = () => {\r\n  const { articles } = useContext(ArticlesContext)\r\n\r\n  return articles.length ? (\r\n    <div id=\"articlesItems\">\r\n      {\r\n        articles.map(article =>\r\n          <ArticleItem key={article.id} {...article} />\r\n        )\r\n      }\r\n    </div>\r\n  ) : (\r\n      <EmptyDisplay />\r\n    );\r\n}\r\n\r\nexport default ArticlesItems;","import React, { createContext, useState } from 'react';\r\nimport uuid from 'uuid/v1';\r\n\r\nexport const NotesContext = createContext();\r\n\r\nconst NotesContextProvider = (props) => {\r\n  const [notes, setNotes] = useState([\r\n    { id: 1, name: 'Description 1', description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus repellat accusamus labore, dolorem cupiditate reiciendis! Iste delectus iure in exercitationem culpa maiores est dolor quaerat dignissimos, cupiditate obcaecati eos unde.' },\r\n    { id: 2, name: 'Description 2', description: 'Lorem ipsum dolor sit amet.' },\r\n    { id: 3, name: 'Description 3', description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Sint minima corrupti cupiditate delectus modi optio.' },\r\n    { id: 4, name: 'Description 4', description: 'Lorem ipsum dolor, sit amet consectetur adipisicing elit. Rem alias temporibus maiores placeat, quaerat et corporis ipsam porro esse ab.' },\r\n  ]);\r\n\r\n  const removeNote = (id) => {\r\n    setNotes(notes.filter(note => note.id !== id));\r\n  }\r\n\r\n  const addNote = (name, description) => {\r\n    setNotes([...notes, { id: uuid(), name, description }]);\r\n  }\r\n\r\n  const editNote = (id, name, description) => {\r\n    const editedElement = {\r\n      id, name, description\r\n    }\r\n\r\n    const tempArr = notes.map(el => {\r\n      if (el.id === id) {\r\n        return editedElement;\r\n      }\r\n      return el;\r\n    });\r\n\r\n    setNotes(tempArr);\r\n  }\r\n\r\n  return (\r\n    <NotesContext.Provider value={{ notes, removeNote, addNote, editNote }}>\r\n      {props.children}\r\n    </NotesContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default NotesContextProvider;","import React, { useContext } from 'react';\r\nimport { NotesContext } from '../../contexts/NotesContext/NotesContext';\r\nimport { AppContext } from '../../contexts/AppContext/AppContext';\r\n\r\nconst NoteItem = ({ id, name, description }) => {\r\n  const { removeNote } = useContext(NotesContext);\r\n  const { setFormNoteOn } = useContext(AppContext);\r\n\r\n  return (\r\n    <div id=\"noteItem\">\r\n      <div className=\"description\">\r\n        <h2 className=\"header\">{name}</h2>\r\n        <p className=\"paragraph\">{description}</p>\r\n\r\n        <button onClick={() => setFormNoteOn(id)} className=\"btn btn-transparent\">edit</button>\r\n\r\n        <button\r\n          onClick={() => removeNote(id)}\r\n          className=\"btn btn-transparent\"\r\n        >remove</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoteItem;","import React, { useContext } from 'react';\r\nimport { NotesContext } from '../../contexts/NotesContext/NotesContext';\r\nimport EmptyDisplay from '../../components/EmptyDisplay';\r\nimport NoteItem from './NoteItem';\r\n\r\nconst NotesItems = () => {\r\n  const { notes } = useContext(NotesContext);\r\n\r\n  return notes.length ? (\r\n    <div>\r\n      {\r\n        notes.map(note =>\r\n          <NoteItem key={note.id} {...note} />\r\n        )\r\n      }\r\n    </div>\r\n  ) : (\r\n      <EmptyDisplay />\r\n    )\r\n}\r\n\r\nexport default NotesItems;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport TwittersItems from './TwittersList/TwittersItems';\r\nimport ArticlesItems from './ArticlesList/ArticlesItems';\r\nimport NotesItems from './NotesList/NotesItems';\r\n\r\nconst ViewContainer = () => {\r\n\r\n  return (\r\n    <section id=\"view-container\">\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <TwittersItems />} />\r\n        <Route exact path=\"/articles\" render={() => <ArticlesItems />} />\r\n        <Route exact path=\"/notes\" render={() => <NotesItems />} />\r\n        <Route render={() => <div>Error</div>} />\r\n      </Switch>\r\n\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ViewContainer;","import React, { useContext, useState } from 'react';\r\nimport { TwittersContext } from '../contexts/TwittersContext/TwittersContext';\r\nimport { AppContext } from '../contexts/AppContext/AppContext';\r\nimport tempImg from '../img/mountain.jpg';\r\nimport { useEffect } from 'react';\r\n\r\nconst NewFormTwitter = () => {\r\n  const { addTwitt } = useContext(TwittersContext);\r\n  const { setFormOff } = useContext(AppContext);\r\n\r\n  const [name, setName] = useState('');\r\n  const [twitterPage, setTwitterPage] = useState('');\r\n  const [picture, setPicture] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n\r\n    const image = pictureValidation();\r\n\r\n    addTwitt(image, name, description, twitterPage);\r\n\r\n    setName('');\r\n    setTwitterPage('');\r\n    setPicture('');\r\n    setDescription('');\r\n    setFormOff();\r\n  }\r\n\r\n  const pictureValidation = () => {\r\n    const validationExtencions = ['.jpg', '.png', '.jpeg'];\r\n    const index = picture.lastIndexOf('.');\r\n\r\n    if (index === -1) {\r\n      return tempImg\r\n    } else {\r\n      const extensione = picture.substr(index);\r\n\r\n      console.log(validationExtencions.find(el => el === extensione));\r\n      if (validationExtencions.find(el => el === extensione) !== undefined)\r\n        return picture;\r\n      else\r\n        return tempImg;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"newForm\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Twitter Name...\"\r\n        required\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Twitter Link...\"\r\n        required\r\n        value={twitterPage}\r\n        onChange={(e) => setTwitterPage(e.target.value)}\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Image Url...\"\r\n        required\r\n        value={picture}\r\n        onChange={(e) => setPicture(e.target.value)}\r\n      />\r\n\r\n      <textarea\r\n        placeholder=\"Description...\"\r\n        required\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      ></textarea>\r\n\r\n      <button className=\"btn btn-transparent\">Add New Twitt</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NewFormTwitter;","import React, { useState, useContext } from 'react';\r\nimport { ArticlesContext } from '../contexts/ArticlesContext/ArticlesContext';\r\nimport { AppContext } from '../contexts/AppContext/AppContext';\r\n\r\nconst NewFormArticle = () => {\r\n  const { addArticle, editArticle } = useContext(ArticlesContext);\r\n  const { setFormOff } = useContext(AppContext);\r\n\r\n  const [name, setName] = useState('');\r\n  const [twitterPage, setTwitterPage] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    addArticle(name, description, twitterPage);\r\n\r\n    setName('')\r\n    setTwitterPage('')\r\n    setDescription('');\r\n    setFormOff();\r\n  }\r\n\r\n  return (\r\n    <form\r\n      className=\"newForm\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Article name...\"\r\n        required\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Twitter Link...\"\r\n        required\r\n        value={twitterPage}\r\n        onChange={(e) => setTwitterPage(e.target.value)}\r\n      />\r\n\r\n      <textarea\r\n        placeholder=\"Description...\"\r\n        required\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      ></textarea>\r\n\r\n      <button className=\"btn btn-transparent\">Ann New Article</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NewFormArticle;","import React, { useState, useContext } from 'react';\r\nimport { NotesContext } from '../contexts/NotesContext/NotesContext';\r\nimport { AppContext } from '../contexts/AppContext/AppContext';\r\n\r\nconst NewFormNotes = () => {\r\n  const { addNote } = useContext(NotesContext);\r\n  const { setFormOff } = useContext(AppContext);\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    addNote(name, description);\r\n\r\n    setName('');\r\n    setDescription('');\r\n    setFormOff();\r\n  }\r\n  return (\r\n    <form\r\n      className=\"newForm\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Note name...\"\r\n        required\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n\r\n      <textarea\r\n        placeholder=\"Description...\"\r\n        required\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      ></textarea>\r\n\r\n      <button className=\"btn btn-transparent\">Add New Note</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NewFormNotes;","import React, { Component } from 'react';\r\nimport NewFormTwitter from '../components/NewFormTwitter';\r\nimport NewFormArticle from '../components/NewFormArticle';\r\nimport NewFormNotes from '../components/NewFormNotes';\r\n\r\nclass NewItem extends Component {\r\n  headerInfo = {\r\n    twitter: 'Add new Twitter account',\r\n    article: 'Add new Article',\r\n    notes: 'Add new Note'\r\n  };\r\n  state = {\r\n    twitter: true,\r\n    article: false,\r\n    notes: false,\r\n    header: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      header: this.headerInfo.twitter\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      twitter: false,\r\n      article: false,\r\n      notes: false\r\n    });\r\n\r\n    this.setState({\r\n      [e.target.id]: true,\r\n      header: this.headerInfo[e.target.id]\r\n    });\r\n\r\n  }\r\n\r\n  displayForm = () => {\r\n    if (this.state.twitter) {\r\n      return (\r\n        <NewFormTwitter />\r\n      )\r\n    } else if (this.state.article) {\r\n      return (\r\n        <NewFormArticle />\r\n      )\r\n    } else if (this.state.notes) {\r\n      return (\r\n        <NewFormNotes />\r\n      )\r\n    } else {\r\n      return (\r\n        <h3>Something went wrong</h3>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { twitter, article, notes, header } = this.state;\r\n\r\n    return (\r\n      <section id=\"newItem\">\r\n\r\n        <div className=\"itemBoard\">\r\n          <button\r\n            className=\"btn btnClose\"\r\n            onClick={this.props.setFormOff}\r\n          >x</button>\r\n\r\n          <h3 className=\"header\">{header}</h3>\r\n\r\n          <div className=\"noteOption\">\r\n            <label htmlFor=\"twitter\">twitter:\r\n              <input type=\"radio\" name=\"radiobutton\" id=\"twitter\" checked={twitter} onChange={this.handleChange} />\r\n            </label>\r\n\r\n            <label htmlFor=\"article\">article:\r\n              <input type=\"radio\" name=\"radiobutton\" id=\"article\" checked={article} onChange={this.handleChange} />\r\n            </label>\r\n\r\n            <label htmlFor=\"notes\">notes:\r\n              <input type=\"radio\" name=\"radiobutton\" id=\"notes\" checked={notes} onChange={this.handleChange} />\r\n            </label>\r\n          </div>\r\n\r\n\r\n          <div className=\"application\">\r\n            {\r\n              this.displayForm()\r\n            }\r\n          </div>\r\n\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewItem;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { AppContext } from '../../contexts/AppContext/AppContext';\r\nimport { TwittersContext } from '../../contexts/TwittersContext/TwittersContext';\r\n\r\nconst EditTwitter = ({ id }) => {\r\n  const { setFormTwitterOff } = useContext(AppContext);\r\n  const { twitters, editTwitt } = useContext(TwittersContext);\r\n\r\n  const [name, setName] = useState('');\r\n  const [twitterPage, setTwitterPage] = useState('');\r\n  const [picture, setPicture] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  useEffect(() => {\r\n    const twitt = twitters.find(twitt => twitt.id === id);\r\n\r\n    setName(twitt.name);\r\n    setTwitterPage(twitt.twitterPage);\r\n    setPicture(twitt.picture);\r\n    setDescription(twitt.description);\r\n  }, [twitters, id])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    editTwitt(id, name, picture, description, twitterPage);\r\n\r\n    setName('');\r\n    setTwitterPage('');\r\n    setPicture('');\r\n    setDescription('');\r\n    setFormTwitterOff();\r\n  }\r\n\r\n  return (\r\n    <section id=\"edit\">\r\n      <div className=\"editBoard\">\r\n        <button\r\n          onClick={setFormTwitterOff}\r\n          className=\"btn btnClose\"\r\n        >x</button>\r\n        <h3 className=\"header\">Edit Twitt: {id}</h3>\r\n\r\n        <div className=\"application\">\r\n          <form\r\n            className=\"newForm\"\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Twitter Name...\"\r\n              required\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Twitter Link...\"\r\n              required\r\n              value={twitterPage}\r\n              onChange={(e) => setTwitterPage(e.target.value)}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Image Url...\"\r\n              required\r\n              value={picture}\r\n              onChange={(e) => setPicture(e.target.value)}\r\n            />\r\n\r\n            <textarea\r\n              placeholder=\"Description...\"\r\n              required\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            ></textarea>\r\n\r\n            <button className=\"btn btn-transparent\">change twitt</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default EditTwitter;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { AppContext } from '../../contexts/AppContext/AppContext';\r\nimport { ArticlesContext } from '../../contexts/ArticlesContext/ArticlesContext';\r\n\r\nconst EditArticle = ({ id }) => {\r\n  const { setFormArticleOff } = useContext(AppContext);\r\n  const { articles, editArticle } = useContext(ArticlesContext);\r\n\r\n  const [name, setName] = useState('');\r\n  const [twitterPage, setTwitterPage] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  useEffect(() => {\r\n    const article = articles.find(twitt => twitt.id === id);\r\n\r\n    setName(article.name);\r\n    setTwitterPage(article.twitterPage);\r\n    setDescription(article.description);\r\n  }, [articles, id]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    editArticle(id, name, description, twitterPage);\r\n\r\n    setName('');\r\n    setTwitterPage('');\r\n    setDescription('');\r\n    setFormArticleOff();\r\n  }\r\n\r\n  return (\r\n    <section id=\"edit\">\r\n      <div className=\"editBoard\">\r\n        <button\r\n          onClick={setFormArticleOff}\r\n          className=\"btn btnClose\"\r\n        >x</button>\r\n        <h3 className=\"header\">Edit Article: {id}</h3>\r\n\r\n        <div className=\"application\">\r\n          <form\r\n            className=\"newForm\"\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Article Name...\"\r\n              required\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Article Link...\"\r\n              required\r\n              value={twitterPage}\r\n              onChange={(e) => setTwitterPage(e.target.value)}\r\n            />\r\n\r\n            <textarea\r\n              placeholder=\"Description...\"\r\n              required\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            ></textarea>\r\n\r\n            <button className=\"btn btn-transparent\">change article</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default EditArticle;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { AppContext } from '../../contexts/AppContext/AppContext';\r\nimport { NotesContext } from '../../contexts/NotesContext/NotesContext';\r\n\r\nconst EditNote = ({ id }) => {\r\n  const { setFormNoteOff } = useContext(AppContext);\r\n  const { notes, editNote } = useContext(NotesContext);\r\n\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  useEffect(() => {\r\n    const newNote = notes.find(note => note.id === id);\r\n\r\n    setName(newNote.name);\r\n    setDescription(newNote.description);\r\n  }, [id, notes]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    editNote(id, name, description);\r\n\r\n    setName('');\r\n    setDescription('');\r\n    setFormNoteOff();\r\n  }\r\n\r\n  return (\r\n    <section id=\"edit\">\r\n      <div className=\"editBoard\">\r\n        <button\r\n          onClick={setFormNoteOff}\r\n          className=\"btn btnClose\"\r\n        >x</button>\r\n        <h3 className=\"header\">Edit Note: {id}</h3>\r\n\r\n        <div className=\"application\">\r\n          <form\r\n            className=\"newForm\"\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Article Name...\"\r\n              required\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n\r\n            <textarea\r\n              placeholder=\"Description...\"\r\n              required\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            ></textarea>\r\n\r\n            <button className=\"btn btn-transparent\">change article</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default EditNote;","import React, { useState, Fragment } from 'react';\nimport Navigation from './components/Navigation';\nimport { BrowserRouter } from 'react-router-dom';\nimport ViewContainer from './views/ViewContainer';\nimport TwittersContextProvider from './contexts/TwittersContext/TwittersContext';\nimport NewItem from './views/NewItem';\nimport { AppContext } from './contexts/AppContext/AppContext';\nimport ArticlesContextProvider from './contexts/ArticlesContext/ArticlesContext';\nimport NotesContextProvider from './contexts/NotesContext/NotesContext';\nimport EditTwitter from './views/Edit/EditTwitter';\nimport EditArticle from './views/Edit/EditArticle';\nimport EditNote from './views/Edit/EditNote';\n\nfunction App() {\n  const [id, setId] = useState(null);\n\n  const [twitter, setTwitter] = useState(false);\n  const setFormTwitterOn = (id) => {\n    setTwitter(true)\n    setId(id);\n  }\n  const setFormTwitterOff = () => {\n    setTwitter(false);\n    setId(null);\n  }\n\n  const [article, setArticle] = useState(false);\n  const setFormArticleOn = (id) => {\n    setArticle(true);\n    setId(id);\n  }\n  const setFormArticleOff = () => {\n    setArticle(false);\n    setId(null);\n  }\n\n  const [note, setNote] = useState(false);\n  const setFormNoteOn = (id) => {\n    setNote(true);\n    setId(id);\n  }\n  const setFormNoteOff = () => {\n    setNote(false);\n    setId(null);\n  }\n\n  const [isFormOn, setIsFormOn] = useState(false);\n  const setFormOn = () => {\n    setIsFormOn(true);\n  }\n  const setFormOff = () => {\n    setIsFormOn(false);\n  }\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n\n      <div className=\"App\">\n        <Navigation setFormOn={setFormOn} />\n\n        <TwittersContextProvider>\n          <ArticlesContextProvider>\n            <NotesContextProvider>\n\n              <AppContext.Provider value={{ setFormOff, setFormTwitterOn, setFormTwitterOff, setFormArticleOn, setFormArticleOff, setFormNoteOn, setFormNoteOff }}>\n                <Fragment>\n                  {\n                    isFormOn ? <NewItem setFormOff={setFormOff} /> : null\n                  }\n                </Fragment>\n                <Fragment>\n                  {\n                    twitter ? <EditTwitter id={id} /> : null\n                  }\n                  {\n                    article ? <EditArticle id={id} /> : null\n                  }\n                  {\n                    note ? <EditNote id={id} /> : null\n                  }\n                </Fragment>\n\n\n                <ViewContainer />\n              </AppContext.Provider>\n\n            </NotesContextProvider>\n          </ArticlesContextProvider>\n        </TwittersContextProvider>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}